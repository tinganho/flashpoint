interface IntInterface {
    field: Int
}

interface StringInterface {
    field: String
}

type Object1 {
    field: Int
}

type Object2 {
    field: Int
}

interface ObjectInterface {
    field: Object1
}

type _Int implements StringInterface {
    field: Int
           ~~~ (22, 12, 3)
!!! Type 'Int' does not match type 'String' from the interface 'StringInterface'.
}

type _String implements IntInterface {
    field: String
           ~~~~~~ (26, 12, 6)
!!! Type 'String' does not match type 'Int' from the interface 'IntInterface'.
}

type _Boolean implements IntInterface {
    field: Boolean
           ~~~~~~~ (30, 12, 7)
!!! Type 'Boolean' does not match type 'Int' from the interface 'IntInterface'.
}

type _Float implements IntInterface {
    field: Float
           ~~~~~ (34, 12, 5)
!!! Type 'Float' does not match type 'Int' from the interface 'IntInterface'.
}

type _ID implements IntInterface {
    field: ID
           ~~ (38, 12, 2)
!!! Type 'ID' does not match type 'Int' from the interface 'IntInterface'.
}

type _ObjectType implements ObjectInterface {
    field: Object2
           ~~~~~~~ (42, 12, 7)
!!! Type 'Object2' does not match type 'Object1' from the interface 'ObjectInterface'.
}

type Query {
    int: _Int
    string: _String
    boolean: _Boolean
    float: _Float
    id: ID
    objectType: _ObjectType
}